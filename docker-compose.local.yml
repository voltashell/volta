version: '3.8'

services:
  nats:
    image: nats:2.10-alpine
    container_name: nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-m", "8222"]
    networks:
      - bus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  agent-1:
    build:
      context: ./agents
      dockerfile: Dockerfile
      args:
        - AGENT_UID=1001
        - AGENT_GID=1001
    image: ai-agent-1:latest
    container_name: agent-1
    restart: unless-stopped
    depends_on:
      nats:
        condition: service_healthy
    environment:
      - AGENT_ID=agent-1
      - NATS_URL=nats://nats:4222
      - SHARED_DIR=/home/shared
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=claude-3-5-sonnet-20241022
      - CUSTOM_REPO_PATH=${CUSTOM_REPO_PATH:-}
      - REPO_MOUNT_PATH=/home/workspace/repo
    volumes:
      - ./shared:/home/shared
      - ${CUSTOM_REPO_PATH:-/tmp/empty}:/home/workspace/repo:rw
    networks:
      - bus
    tmpfs:
      - /tmp
      - /run
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    tty: true
    stdin_open: true

  agent-2:
    build:
      context: ./agents
      dockerfile: Dockerfile
      args:
        - AGENT_UID=1002
        - AGENT_GID=1002
    image: ai-agent-2:latest
    container_name: agent-2
    restart: unless-stopped
    depends_on:
      nats:
        condition: service_healthy
    environment:
      - AGENT_ID=agent-2
      - NATS_URL=nats://nats:4222
      - SHARED_DIR=/home/shared
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=claude-3-5-sonnet-20241022
      - CUSTOM_REPO_PATH=${CUSTOM_REPO_PATH:-}
      - REPO_MOUNT_PATH=/home/workspace/repo
    volumes:
      - ./shared:/home/shared
      - ${CUSTOM_REPO_PATH:-/tmp/empty}:/home/workspace/repo:rw
    networks:
      - bus
    tmpfs:
      - /tmp
      - /run
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    tty: true
    stdin_open: true

  agent-3:
    build:
      context: ./agents
      dockerfile: Dockerfile
      args:
        - AGENT_UID=1003
        - AGENT_GID=1003
    image: ai-agent-3:latest
    container_name: agent-3
    restart: unless-stopped
    depends_on:
      nats:
        condition: service_healthy
    environment:
      - AGENT_ID=agent-3
      - NATS_URL=nats://nats:4222
      - SHARED_DIR=/home/shared
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=claude-3-5-sonnet-20241022
      - CUSTOM_REPO_PATH=${CUSTOM_REPO_PATH:-}
      - REPO_MOUNT_PATH=/home/workspace/repo
    volumes:
      - ./shared:/home/shared
      - ${CUSTOM_REPO_PATH:-/tmp/empty}:/home/workspace/repo:rw
    networks:
      - bus
    tmpfs:
      - /tmp
      - /run
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    tty: true
    stdin_open: true

  monitor-server:
    build:
      context: ./monitor-server
      dockerfile: Dockerfile
    image: ai-flock-monitor-server:latest
    container_name: monitor-server
    restart: unless-stopped
    ports:
      - "3101:3101"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - bus
    depends_on:
      - nats
      - agent-1
      - agent-2
      - agent-3
    user: "0:0"  # Run as root to access Docker socket
    security_opt:
      - no-new-privileges:false  # Allow privileges to access Docker

  monitor:
    build:
      context: ./monitor
      dockerfile: Dockerfile
    image: ai-flock-monitor:latest
    container_name: monitor
    restart: unless-stopped
    ports:
      - "3100:3100"
    networks:
      - bus
    depends_on:
      - monitor-server
    environment:
      - NEXT_PUBLIC_WEBSOCKET_URL=http://monitor-server:3101

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    image: ai-flock-mcp-server:latest
    container_name: mcp-server
    restart: unless-stopped
    depends_on:
      nats:
        condition: service_healthy
    environment:
      - NATS_URL=nats://nats:4222
      - LOG_LEVEL=info
      - MCP_MODE=websocket
      - MCP_PORT=3102
    ports:
      - "3102:3102"
    networks:
      - bus
    volumes:
      - ./mcp-server/mcp.json:/app/mcp.json:ro
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  bus:
    driver: bridge