{
  "name": "ai-flock",
  "version": "1.0.0",
  "description": "A TypeScript project",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "dev": "ts-node src/index.ts",
    "start": "node dist/index.js",
    "watch": "tsc --watch",
    "clean": "rm -rf dist",
    "flock:up": "./scripts/init-agents.sh && docker-compose -f docker-compose.local.yml up -d --build",
    "flock:down": "docker-compose -f docker-compose.local.yml down",
    "flock:clean": "rm -rf shared/agents/*/task-*.json shared/logs/*.log || true",
    "flock:restart": "npm run flock:down && npm run flock:clean && npm run flock:up",
    "flock:logs": "docker-compose -f docker-compose.local.yml logs -f --tail=100 --timestamps",
    "flock:status": "docker-compose -f docker-compose.local.yml ps",
    "flock:stats": "docker stats agent-1 agent-2 agent-3 nats",
    "flock:shell:agent1": "docker exec -it agent-1 /bin/bash",
    "flock:shell:agent2": "docker exec -it agent-2 /bin/bash",
    "flock:shell:agent3": "docker exec -it agent-3 /bin/bash",
    "flock:shell:nats": "docker exec -it nats /bin/sh",
    "flock:test": "NATS_URL=nats://localhost:4222 node scripts/test-client.js",
    "flock:scale": "docker-compose -f docker-compose.local.yml up -d --scale agent-1=2 --scale agent-2=2 --scale agent-3=2",
    "flock:reset": "docker-compose -f docker-compose.local.yml down -v && docker system prune -f",
    "flock:logs:agent1": "docker logs -f agent-1",
    "flock:logs:agent2": "docker logs -f agent-2",
    "flock:logs:agent3": "docker logs -f agent-3",
    "flock:logs:nats": "docker logs -f nats",
    "flock:term:agent1": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:logs:agent1\"'",
    "flock:term:agent2": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:logs:agent2\"'",
    "flock:term:agent3": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:logs:agent3\"'",
    "flock:term:nats": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:logs:nats\"'",
    "flock:term:all": "npm run flock:term:agent1 && npm run flock:term:agent2 && npm run flock:term:agent3 && npm run flock:term:nats",
    "flock:bash:agent1": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:shell:agent1\"'",
    "flock:bash:agent2": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:shell:agent2\"'",
    "flock:bash:agent3": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run flock:shell:agent3\"'",
    "flock:bash:all": "npm run flock:bash:agent1 && npm run flock:bash:agent2 && npm run flock:bash:agent3",
    "flock:monitor": "open http://localhost:3000",
    "flock:monitor:dev": "cd monitor && npm install && npm run dev",
    "flock:monitor:build": "cd monitor && npm run build",
    "flock:monitor:server": "cd monitor-old && npm install && npm run dev",
    "flock:monitor:full": "npm run flock:monitor:server & npm run flock:monitor:dev",
    "flock:shared": "ls -la shared/agents/ && ls -la shared/logs/",
    "flock:cli-monitor": "while true; do clear; docker ps --format 'table {{.Names}}\\t{{.Status}}\\t{{.Ports}}'; echo; docker stats --no-stream agent-1 agent-2 agent-3 nats 2>/dev/null || true; sleep 2; done",
    "agents:build": "cd agents && npm run build",
    "agents:dev": "cd agents && npm run dev",
    "agents:type-check": "cd agents && npm run type-check",
    "agents:clean": "cd agents && npm run clean",
    "dbuild": "docker build -t ai-flock .",
    "drun": "docker run -p 3000:3000 ai-flock",
    "dup": "docker-compose up -d",
    "ddown": "docker-compose down",
    "dlogs": "docker-compose logs -f",
    "vm:up": "vagrant up",
    "vm:ssh": "vagrant ssh",
    "vm:provision": "vagrant provision",
    "vm:destroy": "vagrant destroy -f",
    "vm:agents": "vagrant ssh -c 'cd /vagrant && ./scripts/manage-agents.sh up'",
    "vm:agents:build": "vagrant ssh -c 'cd /vagrant && ./scripts/manage-agents.sh build'",
    "vm:agents:down": "vagrant ssh -c 'cd /vagrant && ./scripts/manage-agents.sh down'",
    "vm:agents:logs": "vagrant ssh -c 'cd /vagrant && ./scripts/manage-agents.sh logs'",
    "vm:agents:test": "vagrant ssh -c 'cd /vagrant && ./scripts/manage-agents.sh test'",
    "vm:down": "vagrant halt"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/node": "^20.0.0",
    "ts-node": "^10.9.0",
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "dockerode": "^4.0.7",
    "nats": "^2.29.3",
    "socket.io": "^4.8.1"
  }
}
