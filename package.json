{
  "name": "ai-flock",
  "version": "1.0.0",
  "description": "A TypeScript project",
  "main": "dist/index.js",
  "scripts": {
    "volta:up": "./scripts/init-agents.sh && docker-compose -f docker-compose.local.yml up -d --build",
    "volta:down": "docker-compose -f docker-compose.local.yml down",
    "volta:clean": "rm -rf shared/agents/*/task-*.json shared/logs/*.log || true",
    "volta:clear-shared": "./scripts/clear-shared.sh",
    "volta:restart": "npm run volta:down && npm run volta:clean && npm run volta:up && npm run electron:compose",
    "volta:logs": "docker-compose -f docker-compose.local.yml logs -f --tail=100 --timestamps",
    "volta:status": "docker-compose -f docker-compose.local.yml ps",
    "volta:stats": "docker stats agent-1 agent-2 agent-3 nats",
    "volta:shell:agent1": "docker exec -it agent-1 /bin/bash",
    "volta:shell:agent2": "docker exec -it agent-2 /bin/bash",
    "volta:shell:agent3": "docker exec -it agent-3 /bin/bash",
    "volta:shell:nats": "docker exec -it nats /bin/sh",
    "volta:scale": "docker-compose -f docker-compose.local.yml up -d --scale agent-1=2 --scale agent-2=2 --scale agent-3=2",
    "volta:reset": "docker-compose -f docker-compose.local.yml down -v && docker system prune -f",
    "volta:logs:agent1": "docker logs -f agent-1",
    "volta:logs:agent2": "docker logs -f agent-2",
    "volta:logs:agent3": "docker logs -f agent-3",
    "volta:logs:nats": "docker logs -f nats",
    "volta:term:agent1": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:logs:agent1\"'",
    "volta:term:agent2": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:logs:agent2\"'",
    "volta:term:agent3": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:logs:agent3\"'",
    "volta:term:nats": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:logs:nats\"'",
    "volta:term:all": "npm run volta:term:agent1 && npm run volta:term:agent2 && npm run volta:term:agent3 && npm run volta:term:nats",
    "volta:bash:agent1": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:shell:agent1\"'",
    "volta:bash:agent2": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:shell:agent2\"'",
    "volta:bash:agent3": "osascript -e 'tell app \"Terminal\" to do script \"cd \\\"$(pwd)\\\" && npm run volta:shell:agent3\"'",
    "volta:bash:all": "npm run volta:bash:agent1 && npm run volta:bash:agent2 && npm run volta:bash:agent3",
    "volta:monitor": "open http://localhost:3100",
    "volta:monitor:dev": "cd monitor && npm install && npm run dev",
    "volta:monitor:build": "cd monitor && npm run build",
    "volta:monitor:server": "cd monitor-server && npm install && npm run dev",
    "volta:monitor:full": "npm run volta:monitor:server & npm run volta:monitor:dev",
    "electron:dev": "cd monitor && npm run electron:dev",
    "electron:compose": "cd monitor && npm run electron:compose",
    "electron:build": "npm run volta:monitor:build && electron-builder",
    "volta:shared": "ls -la shared/agents/ && ls -la shared/logs/",
    "volta:cli-monitor": "while true; do clear; docker ps --format 'table {{.Names}}\\t{{.Status}}\\t{{.Ports}}'; echo; docker stats --no-stream agent-1 agent-2 agent-3 nats 2>/dev/null || true; sleep 2; done",
    "agents:build": "cd agents && npm run build",
    "agents:dev": "cd agents && npm run dev",
    "agents:type-check": "cd agents && npm run type-check",
    "agents:clean": "cd agents && npm run clean"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/node": "^20.0.0",
    "ts-node": "^10.9.0",
    "typescript": "^5.0.0",
    "electron": "^37.4.0",
    "electron-builder": "^26.0.12"
  },
  "dependencies": {
    "dockerode": "^4.0.7",
    "nats": "^2.29.3",
    "socket.io": "^4.8.1",
    "@auth0/auth0-react": "^2.4.0"
  },
  "build": {
    "appId": "com.ai-flock.app",
    "productName": "AI Flock",
    "files": [
      "monitor/electron/**/*",
      "monitor/**",
      "monitor-server/**",
      "package.json"
    ],
    "extraMetadata": {
      "main": "monitor/electron/main.js"
    }
  }
}
